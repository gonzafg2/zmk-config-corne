/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>

/ {
        macros {
                scr_full: screenshot_full {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&macro_press &kp LGUI>
                                 , <&macro_press &kp LSHFT>
                                 , <&macro_tap &kp N3>
                                 , <&macro_release &kp LSHFT>
                                 , <&macro_release &kp LGUI>;
                };
                scr_area: screenshot_area {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&macro_press &kp LGUI>
                                 , <&macro_press &kp LSHFT>
                                 , <&macro_tap &kp N4>
                                 , <&macro_release &kp LSHFT>
                                 , <&macro_release &kp LGUI>;
                };
                scr_tool: screenshot_tool {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&macro_press &kp LGUI>
                                 , <&macro_press &kp LSHFT>
                                 , <&macro_tap &kp N5>
                                 , <&macro_release &kp LSHFT>
                                 , <&macro_release &kp LGUI>;
                };
                
                arrow_op: arrow_op {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp LS(N0) &kp LS(DOT)>;
                };
                
                spread_op: spread_op {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp DOT &kp DOT &kp DOT>;
                };
                
                eq_op: eq_op {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp LS(N0) &kp LS(N0)>;
                };
                
                and_op: and_op {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp LS(N6) &kp LS(N6)>;
                };
                
                or_op: or_op {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp GRAVE &kp GRAVE>;
                };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp LSHFT &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp LBKT
   &kp LCTRL &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp ESC
                  &kp LGUI &mo 1 &kp SPACE   &kp RET &mo 2 &kp LALT
                        >;
                };
                
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  7  |  8  |  9  |  /  |  *  |   |  (  |  )  |  \  |  !  |  ?  | BKSP |
// | CTRL |  4  |  5  |  6  |  +  |  -  |   |  {  |  }  |  ~  |  '  |  "  |  `  |
// | SHFT |  1  |  2  |  3  |  .  |  0  |   |  [  |  ]  |  <  |  >  |  |  |  _  | DEL  |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp TAB   &kp N7 &kp N8 &kp N9 &kp LS(N7) &kp KP_MULTIPLY    &kp LS(N8)     &kp LS(N9)     &kp LA(MINUS)  &kp EXCL      &kp UNDER      &kp BSPC
   &kp LSHFT &kp N4 &kp N5 &kp N6 &kp RBKT   &kp FSLH           &kp SQT        &kp BSLH       &kp RA(RBKT)   &kp MINUS     &kp LS(N2)     &kp LA(BSLH)
   &kp LCTRL &kp N1 &kp N2 &kp N3 &kp DOT    &kp N0             &kp DQT        &kp PIPE       &kp NUBS       &kp LS(NUBS)  &kp GRAVE      &kp QMARK      &kp DEL
                          &kp LGUI &trans &kp SPACE   &kp RET &trans &kp LALT
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  %  |  @  |  #  |  $  |  &  |   |  =  |  +  |  -  |  *  |  /  | BKSP |
// | SHIFT|  ^  |  !  |  =  |  &  |  |  |   | LFT | DWN | UP  | RGT |  :  |  ;   |
// | CTRL | ARW | SPR | EQL | AND | OR  |   | HOM | PGD | PGU | END | INS | ESC  |
//                    | GUI |     | SPC |   | ENT |     | ALTGR |
                        bindings = <
   &kp TAB   &kp LS(N5)   &kp RA(Q)    &kp LS(N3)    &kp LS(N4)   &kp LS(N6)     &kp LS(N0)     &kp RBKT       &kp FSLH       &kp LS(RBKT)  &kp LS(N7)     &kp BSPC
   &kp LSHFT &kp LA(SQT)  &kp EXCL     &kp LS(N0)    &kp LS(N6)   &kp GRAVE      &kp LEFT       &kp DOWN       &kp UP         &kp RIGHT     &kp LS(DOT)    &kp LS(COMMA)
   &kp LCTRL &arrow_op    &spread_op   &eq_op        &and_op      &or_op         &kp HOME       &kp PG_DN      &kp PG_UP      &kp END       &kp INS        &kp ESC
                                       &kp LGUI      &trans       &kp SPACE      &kp RET   &trans      &kp RALT
                        >;
                };

                adjust_layer {
// -----------------------------------------------------------------------------------------
// |  F1  |  F2 |  F3 |  F4 |  F5 |  F6 |   |  F7 |  F8 |  F9 | F10 | F11 | F12  |
// | BT0  | BT1 | BT2 | BT3 | BT4 |BTCLR|   |RGBTG|BRI+ |BRI- | EFF |SAT+ | HUE+ |
// |PWROFF|SCR1 |SCR2 |SCR3 |     |     |   |VOL+ |VOL- |MUTE |     |     |RESET |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp F1           &kp F2       &kp F3       &kp F4       &kp F5       &kp F6          &kp F7          &kp F8            &kp F9            &kp F10      &kp F11          &kp F12
   &bt BT_SEL 0     &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_CLR      &trans          &trans            &trans            &trans          &trans          &trans
   &ext_power EP_TOG &scr_full   &scr_area    &scr_tool    &trans       &trans          &kp C_VOL_UP    &kp C_VOL_DN      &kp C_MUTE        &trans       &trans           &sys_reset
                                              &kp LGUI     &trans       &kp SPACE       &kp RET         &trans            &kp LALT
                        >;
                };
        };

        conditional_layers {
                compatible = "zmk,conditional-layers";
                tri_layer {
                        if-layers = <1 2>;
                        then-layer = <3>;
                };
        };
};

&led_strip {
    chain-length = <27>;
};